-- ===================================================
-- SCRIPT DE VERIFICA√á√ÉO - ROTA FINAL
-- ===================================================
-- Verifica se todas as tabelas, fun√ß√µes e configura√ß√µes
-- foram criadas corretamente
-- Data: 2024-01-01

DO $$
DECLARE
    table_count INTEGER;
    function_count INTEGER;
    policy_count INTEGER;
    index_count INTEGER;
    trigger_count INTEGER;
    result_text TEXT := '';
BEGIN
    result_text := result_text || E'üîç VERIFICA√á√ÉO DO SETUP DO ROTA FINAL\n';
    result_text := result_text || E'=====================================\n\n';

    -- Verificar tabelas principais
    result_text := result_text || E'üìã TABELAS CRIADAS:\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'organizations';
    result_text := result_text || E'  ‚úÖ organizations: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'organization_members';
    result_text := result_text || E'  ‚úÖ organization_members: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'projects';
    result_text := result_text || E'  ‚úÖ projects: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'experiments';
    result_text := result_text || E'  ‚úÖ experiments: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'variants';
    result_text := result_text || E'  ‚úÖ variants: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'goals';
    result_text := result_text || E'  ‚úÖ goals: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'assignments';
    result_text := result_text || E'  ‚úÖ assignments: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'events';
    result_text := result_text || E'  ‚úÖ events: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'metrics_snapshots';
    result_text := result_text || E'  ‚úÖ metrics_snapshots: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name = 'visitor_sessions';
    result_text := result_text || E'  ‚úÖ visitor_sessions: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';

    -- Verificar views materializadas
    result_text := result_text || E'\nüìä VIEWS MATERIALIZADAS:\n';
    
    SELECT COUNT(*) INTO table_count FROM pg_matviews WHERE matviewname = 'experiment_stats';
    result_text := result_text || E'  ‚úÖ experiment_stats: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO table_count FROM pg_matviews WHERE matviewname = 'variant_stats';
    result_text := result_text || E'  ‚úÖ variant_stats: ' || CASE WHEN table_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';

    -- Verificar fun√ß√µes principais
    result_text := result_text || E'\n‚öôÔ∏è FUN√á√ïES PRINCIPAIS:\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'is_member';
    result_text := result_text || E'  ‚úÖ is_member: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'get_variant_weights';
    result_text := result_text || E'  ‚úÖ get_variant_weights: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'assign_variant';
    result_text := result_text || E'  ‚úÖ assign_variant: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'track_event';
    result_text := result_text || E'  ‚úÖ track_event: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'calculate_significance';
    result_text := result_text || E'  ‚úÖ calculate_significance: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';

    -- Verificar algoritmos MAB
    result_text := result_text || E'\nü§ñ ALGORITMOS MAB:\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'thompson_sampling_weights';
    result_text := result_text || E'  ‚úÖ thompson_sampling_weights: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'ucb1_weights';
    result_text := result_text || E'  ‚úÖ ucb1_weights: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname = 'epsilon_greedy_weights';
    result_text := result_text || E'  ‚úÖ epsilon_greedy_weights: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';

    -- Verificar pol√≠ticas RLS
    result_text := result_text || E'\nüîê POL√çTICAS RLS:\n';
    
    SELECT COUNT(*) INTO policy_count FROM pg_policies WHERE tablename = 'organizations';
    result_text := result_text || E'  ‚úÖ organizations (' || policy_count || ' pol√≠ticas): ' || CASE WHEN policy_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO policy_count FROM pg_policies WHERE tablename = 'projects';
    result_text := result_text || E'  ‚úÖ projects (' || policy_count || ' pol√≠ticas): ' || CASE WHEN policy_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO policy_count FROM pg_policies WHERE tablename = 'experiments';
    result_text := result_text || E'  ‚úÖ experiments (' || policy_count || ' pol√≠ticas): ' || CASE WHEN policy_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO policy_count FROM pg_policies WHERE tablename = 'events';
    result_text := result_text || E'  ‚úÖ events (' || policy_count || ' pol√≠ticas): ' || CASE WHEN policy_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';

    -- Verificar extens√µes
    result_text := result_text || E'\nüß© EXTENS√ïES:\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_extension WHERE extname = 'uuid-ossp';
    result_text := result_text || E'  ‚úÖ uuid-ossp: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';
    
    SELECT COUNT(*) INTO function_count FROM pg_extension WHERE extname = 'pgcrypto';
    result_text := result_text || E'  ‚úÖ pgcrypto: ' || CASE WHEN function_count > 0 THEN 'OK' ELSE '‚ùå FALTANDO' END || E'\n';

    -- Verificar triggers importantes
    result_text := result_text || E'\n‚ö° TRIGGERS:\n';
    
    SELECT COUNT(*) INTO trigger_count FROM information_schema.triggers 
    WHERE trigger_name LIKE '%updated_at%';
    result_text := result_text || E'  ‚úÖ triggers updated_at: ' || trigger_count || E'\n';
    
    SELECT COUNT(*) INTO trigger_count FROM information_schema.triggers 
    WHERE trigger_name LIKE '%generate%';
    result_text := result_text || E'  ‚úÖ triggers de gera√ß√£o: ' || trigger_count || E'\n';

    -- Verificar parti√ß√µes de eventos
    result_text := result_text || E'\nüìä PARTI√á√ïES DE EVENTOS:\n';
    
    SELECT COUNT(*) INTO table_count FROM pg_tables WHERE tablename LIKE 'events_%';
    result_text := result_text || E'  ‚úÖ parti√ß√µes criadas: ' || table_count || E'\n';

    -- Verificar √≠ndices importantes
    result_text := result_text || E'\nüóÇÔ∏è √çNDICES DE PERFORMANCE:\n';
    
    SELECT COUNT(*) INTO index_count FROM pg_indexes 
    WHERE tablename IN ('experiments', 'variants', 'assignments', 'events');
    result_text := result_text || E'  ‚úÖ √≠ndices principais: ' || index_count || E'\n';

    -- Resumo final
    result_text := result_text || E'\nüéØ RESUMO:\n';
    result_text := result_text || E'================\n';
    
    -- Contar total de tabelas esperadas
    SELECT COUNT(*) INTO table_count FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_name IN (
        'organizations', 'organization_members', 'projects', 'experiments', 
        'variants', 'goals', 'assignments', 'events', 'metrics_snapshots', 'visitor_sessions'
    );
    
    result_text := result_text || E'üìã Tabelas: ' || table_count || '/10' || E'\n';
    
    -- Contar fun√ß√µes principais
    SELECT COUNT(*) INTO function_count FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' AND p.proname IN (
        'is_member', 'get_variant_weights', 'assign_variant', 'track_event',
        'thompson_sampling_weights', 'ucb1_weights', 'epsilon_greedy_weights'
    );
    
    result_text := result_text || E'‚öôÔ∏è Fun√ß√µes MAB: ' || function_count || '/7' || E'\n';
    
    -- Contar views materializadas
    SELECT COUNT(*) INTO table_count FROM pg_matviews 
    WHERE matviewname IN ('experiment_stats', 'variant_stats');
    
    result_text := result_text || E'üìä Views: ' || table_count || '/2' || E'\n';
    
    result_text := result_text || E'\n';
    
    IF table_count >= 2 AND function_count >= 7 THEN
        result_text := result_text || E'üöÄ STATUS: SETUP COMPLETO!\n';
        result_text := result_text || E'‚úÖ O Rota Final est√° pronto para uso.\n\n';
        result_text := result_text || E'Pr√≥ximos passos:\n';
        result_text := result_text || E'1. Configure as vari√°veis de ambiente no Next.js\n';
        result_text := result_text || E'2. Teste a cria√ß√£o de uma organiza√ß√£o\n';
        result_text := result_text || E'3. Crie seu primeiro experimento\n';
        result_text := result_text || E'4. Integre o SDK no frontend\n';
    ELSE
        result_text := result_text || E'‚ùå STATUS: SETUP INCOMPLETO\n';
        result_text := result_text || E'Alguns componentes est√£o faltando.\n';
        result_text := result_text || E'Verifique se todas as migra√ß√µes foram executadas.\n';
    END IF;

    -- Imprimir resultado
    RAISE NOTICE '%', result_text;
END $$;
