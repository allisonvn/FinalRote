name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate secrets
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          if [ -z "$SSH_HOST" ]; then
            echo "SSH_HOST secret is required"
            exit 1
          fi
          if [ -z "$SSH_USER" ]; then
            echo "SSH_USER secret is required"
            exit 1
          fi
          if [ -z "$SSH_KEY" ]; then
            echo "SSH_KEY secret is required"
            exit 1
          fi

      - name: Setup SSH
        shell: bash
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Rsync source to server
        shell: bash
        env:
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          RSYNC_SSH="ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${SSH_PORT:-22}"
          rsync -az --delete \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "node_modules" \
            --exclude ".next" \
            --exclude "**/.DS_Store" \
            -e "$RSYNC_SSH" ./ "$SSH_USER@$SSH_HOST:~/apps/rotafinal/"

      - name: Build and restart app on server
        shell: bash
        env:
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          SSH_CMD="ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${SSH_PORT:-22} $SSH_USER@$SSH_HOST"
          $SSH_CMD "bash -lc '
            set -euo pipefail
            export NVM_DIR=\"$HOME/.nvm\"; [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" || true
            command -v nvm >/dev/null && (nvm install 20 >/dev/null 2>&1 || true; nvm use 20 >/dev/null 2>&1 || true)
            cd ~/apps/rotafinal
            npm ci --omit=dev
            npm run build
            pm2 describe rotafinal >/dev/null 2>&1 && pm2 restart rotafinal --update-env || PORT=3030 NODE_ENV=production pm2 start node_modules/next/dist/bin/next start --name rotafinal -- --port 3030
            pm2 save
          '"

      - name: Smoke test (HTTP 200)
        shell: bash
        run: |
          curl -I --retry 5 --retry-delay 2 https://rotafinal.com.br | grep -E "^HTTP/.* 200|^HTTP/.* 301" || exit 1


